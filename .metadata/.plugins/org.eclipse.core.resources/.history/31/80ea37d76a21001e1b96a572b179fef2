package com.kos.tr.app.controller;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import com.kos.tr.app.service.TerraAppService;
import com.kos.tr.app.vo.AppDocVO;
import com.kos.tr.common.T_Session;
import com.kos.tr.member.service.TerraMemberService;
import com.kos.tr.member.vo.TerraMemberVO;

@Controller
public class TerraAppController {

	Logger logger = LogManager.getLogger(TerraAppController.class);
	
	@Autowired(required=false)
	private TerraMemberService terraMemberService;
	
	@Autowired(required=false)
	private TerraAppService terraAppService;
	
	@GetMapping("AppTest")
	public String AppTest(TerraMemberVO tmvo, Model model) {
		
			
		List<TerraMemberVO> aList = terraMemberService.tMemSelectAll(tmvo);
		
		model.addAttribute("aList", aList);
		
		return "terraApproval/trVacation";
	}
	
	@GetMapping("/appSelect_App/{type}")
	public String AppSelectType(@PathVariable String type, HttpServletRequest req, AppDocVO dvo, Model model) {
	 
		
		T_Session ks = T_Session.getInstance();			
		String tnum = ks.getSession(req);
		
		dvo.setAapp(tnum);
		List<AppDocVO> aList = terraAppService.appSelectAll(dvo);
		List<AppDocVO> cList = new ArrayList<AppDocVO>();
		
		
		for (int i = 0; i < aList.size(); i++) {
			AppDocVO advo = new AppDocVO();
			advo = aList.get(i);
			ArrayList<String> bList = new ArrayList<String>(Arrays.asList(advo.getAapp().split(",")));
			
			if (type.equals("A")) {
				logger.info(advo.getAnum() + " >>> 전체"); 
				cList.add(advo);
			}else {
				int f = bList.indexOf(tnum);
			if (f + 1 == Integer.parseInt(advo.getAlevel()) && type.equals("W")) {
				logger.info(advo.getAnum() + ">>>> 대기");
				cList.add(advo);
			}else if (f + 1 < Integer.parseInt(advo.getAlevel()) && type.equals("K")) {
				logger.info(advo.getAnum() + ">>>> 진행");
				cList.add(advo);
			}else if (f + 1 > Integer.parseInt(advo.getAlevel()) && type.equals("P")) {
				logger.info(advo.getAnum() + ">>>> 예정");
				cList.add(advo);
				}
			}
			model.addAttribute("cList", cList);
		}
		
		switch (type) {
			case "A":
				return "terraApproval/appSelect_All";
			case "W":
				return "terraApproval/appSelect_W";
			case "K":
				return "terraApproval/appSelect_K";
			case "P":
				return "terraApproval/appSelect_P";
			default:
				return "/";	
		}
		
	}	
}
