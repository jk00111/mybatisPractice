/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.87
 * Generated at: 2023-08-07 01:29:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.terraCompany;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class companyMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Terra Company</title>\r\n");
      out.write("\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<!-- 디바이스에 최적화된 크기로 출력됨 -->\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\r\n");
      out.write("     	maximum-scale=1.0, minimum-scale=1.0, user-scalable=no\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/css/terraCompany.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	  <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("	\r\n");
      out.write("	// 문서가 준비되었을 때 실행\r\n");
      out.write("	  $(document).ready(function () {\r\n");
      out.write("	   \r\n");
      out.write("		// 날씨 api - fontawesome 아이콘\r\n");
      out.write("	        var weatherIcon = {\r\n");
      out.write("	            '01' : 'fas fa-sun',\r\n");
      out.write("	            '02' : 'fas fa-cloud-sun',\r\n");
      out.write("	            '03' : 'fas fa-cloud',\r\n");
      out.write("	            '04' : 'fas fa-cloud-meatball',\r\n");
      out.write("	            '09' : 'fas fa-cloud-sun-rain',\r\n");
      out.write("	            '10' : 'fas fa-cloud-showers-heavy',\r\n");
      out.write("	            '11' : 'fas fa-poo-storm',\r\n");
      out.write("	            '13' : 'far fa-snowflake',\r\n");
      out.write("	            '50' : 'fas fa-smog'\r\n");
      out.write("	        };\r\n");
      out.write("\r\n");
      out.write("	        // 날씨 api - 서울\r\n");
      out.write("	        var apiURI = \"http://api.openweathermap.org/data/2.5/weather?q=\"+'seoul'+\"&appid=\"+\"ffef07ceb882a71853636872f58282ae\";\r\n");
      out.write("	        $.ajax({\r\n");
      out.write("	            url: apiURI,\r\n");
      out.write("	            dataType: \"json\",\r\n");
      out.write("	            type: \"GET\",\r\n");
      out.write("	            async: \"false\",\r\n");
      out.write("	            success: function(resp) {\r\n");
      out.write("\r\n");
      out.write("	                var $Icon = (resp.weather[0].icon).substr(0,2);\r\n");
      out.write("	                var $weather_description = resp.weather[0].main;\r\n");
      out.write("	                var $Temp = Math.floor(resp.main.temp- 273.15) + 'º';\r\n");
      out.write("	                var $humidity = '습도&nbsp;&nbsp;&nbsp;&nbsp;' + resp.main.humidity+ ' %';\r\n");
      out.write("	                var $wind = '바람&nbsp;&nbsp;&nbsp;&nbsp;' +resp.wind.speed + ' m/s';\r\n");
      out.write("	                var $city = '서울';\r\n");
      out.write("	                var $cloud = '구름&nbsp;&nbsp;&nbsp;&nbsp;' + resp.clouds.all +\"%\";\r\n");
      out.write("	                var $temp_min = '최저 온도&nbsp;&nbsp;&nbsp;&nbsp;' + Math.floor(resp.main.temp_min- 273.15) + 'º';\r\n");
      out.write("	                var $temp_max = '최고 온도&nbsp;&nbsp;&nbsp;&nbsp;' + Math.floor(resp.main.temp_max- 273.15) + 'º';\r\n");
      out.write("	                \r\n");
      out.write("\r\n");
      out.write("	                $('.weather_icon').append('<i class=\"' + weatherIcon[$Icon] +' fa-5x\" style=\"height : 150px; width : 150px;\"></i>');\r\n");
      out.write("	                $('.weather_description').prepend($weather_description);\r\n");
      out.write("	                $('.current_temp').prepend($Temp);\r\n");
      out.write("	                $('.humidity').prepend($humidity);\r\n");
      out.write("	                $('.wind').prepend($wind);\r\n");
      out.write("	                $('.city').append($city);\r\n");
      out.write("	                $('.cloud').append($cloud);\r\n");
      out.write("	                $('.temp_min').append($temp_min);\r\n");
      out.write("	                $('.temp_max').append($temp_max);               \r\n");
      out.write("	            }\r\n");
      out.write("	        })\r\n");
      out.write("	        \r\n");
      out.write("		  \r\n");
      out.write("	  });\r\n");
      out.write("	\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	  <!-- Navigation (maun_wrap) 섹션 -->\r\n");
      out.write("  <div class=\"maun_wrap\">\r\n");
      out.write("    <img onclick=\"location.href='companyMain.tr'\" class=\"logo\" src=\"resources/images/logo-green2.png\" alt=\"logo\" style=\"padding-top:10px\">\r\n");
      out.write("    <ul class=\"dep1\">\r\n");
      out.write("      <li>\r\n");
      out.write("        <a href=\"#\">회사소개</a>\r\n");
      out.write("        <ul class=\"dep2\"> \r\n");
      out.write("          <li><a href=\"#\">회사소개_1</a></li>\r\n");
      out.write("          <li><a href=\"#\">회사소개_2</a></li>\r\n");
      out.write("          <li><a href=\"#\">회사소개_3</a></li>\r\n");
      out.write("          <li><a href=\"#\">회사소개_4</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </li>\r\n");
      out.write("      <li>\r\n");
      out.write("        <a href=\"#\">뉴스/소식</a>\r\n");
      out.write("        <ul class=\"dep2\">\r\n");
      out.write("          <li><a href=\"#\">뉴스/소식_1</a></li>\r\n");
      out.write("          <li><a href=\"#\">뉴스/소식_2</a></li>\r\n");
      out.write("          <li><a href=\"#\">뉴스/소식_3</a></li>\r\n");
      out.write("          <li><a href=\"#\">뉴스/소식_4</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </li>\r\n");
      out.write("      <li>\r\n");
      out.write("        <a href=\"#\">회사공지</a>\r\n");
      out.write("        <ul class=\"dep2\">\r\n");
      out.write("          <li><a href=\"#\">회사공지_1</a></li>\r\n");
      out.write("          <li><a href=\"#\">회사공지_2</a></li>\r\n");
      out.write("          <li><a href=\"#\">회사공지_3</a></li>\r\n");
      out.write("          <li><a href=\"#\">회사공지_4</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </li>\r\n");
      out.write("      <li>\r\n");
      out.write("        <a href=\"#\">고객지원</a>\r\n");
      out.write("        <ul class=\"dep2\">\r\n");
      out.write("          <li><a href=\"#\">고객지원_1</a></li>\r\n");
      out.write("          <li><a href=\"#\">고객지원_2</a></li>\r\n");
      out.write("          <li><a href=\"#\">고객지원_3</a></li>\r\n");
      out.write("          <li><a href=\"#\">고객지원_4</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </li>\r\n");
      out.write("    </ul>\r\n");
      out.write("  </div>\r\n");
      out.write("<!-- 메인 컨텐츠 (main) 섹션 -->\r\n");
      out.write("    <div class=\"main\">\r\n");
      out.write("      \r\n");
      out.write("      <p>회사 찾아오시는 길</p>\r\n");
      out.write("      <div class=\"weather\">\r\n");
      out.write("      	 <div  style=\" padding : 40px;color : black; height : 220px\">\r\n");
      out.write("	        <div style=\"float : left;\">\r\n");
      out.write("	              	   <!-- map 지도 섹션 -->\r\n");
      out.write("	            <div class=\"weather_icon\"></div>\r\n");
      out.write("	        </div><br>\r\n");
      out.write("	    \r\n");
      out.write("	        <div style=\"float : right; margin : -5px 0px 0px 60px; font-size : 11pt\">\r\n");
      out.write("	                <div class=\"temp_min\"></div>\r\n");
      out.write("	                <div class=\"temp_max\"></div>\r\n");
      out.write("	                <div class=\"humidity\"></div>\r\n");
      out.write("	                <div class=\"wind\"></div>\r\n");
      out.write("	                <div class=\"cloud\"></div>\r\n");
      out.write("	        </div>\r\n");
      out.write("	        <div style=\"float : right; margin-top : -45px;\">\r\n");
      out.write("	            <div class=\"current_temp\" style=\"font-size : 50pt\"></div>\r\n");
      out.write("	            <div class=\"weather_description\" style=\"font-size : 20pt\"></div>\r\n");
      out.write("	            <div class=\"city\" style=\"font-size : 13pt\"></div>\r\n");
      out.write("	        </div>\r\n");
      out.write("	    </div>\r\n");
      out.write("      </div>\r\n");
      out.write("       \r\n");
      out.write("        <div class=\"btn_group\">\r\n");
      out.write("        \r\n");
      out.write("          <button id=\"loginButton\" class=\"button\">로그인</button><br>\r\n");
      out.write("          <button onclick=\"location.href='loginForm.tr'\" id=\"groupwareButton\" class=\"button\"> 그룹웨어 </button>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"map\" id=\"inf\" >\r\n");
      out.write("      <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1583.1176388537303!2d126.87769174575804!3d37.47877391076083!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x357b61fcb47b582b%3A0x536ee2f714c1e156!2z7JuU65Oc66mU66W065SU7JWZ67Kk7LOQ7IS87YSwMuywqA!5e0!3m2!1sko!2skr!4v1689730940424!5m2!1sko!2skr\" width=\"600\" height=\"450\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\r\n");
      out.write("    </div>\r\n");
      out.write(" <!-- 바닥부 (footer) 섹션 -->\r\n");
      out.write("  <footer class=\"footer_wrap\" style=\"height:123px;\">\r\n");
      out.write("    <div class=\"footer_content\">\r\n");
      out.write("      <div class=\"footer_logo\" >\r\n");
      out.write("        <img src=\"resources/images/logo-green2.png\" alt=\"footer logo\">\r\n");
      out.write("      </div >\r\n");
      out.write("      <div class=\"footer_text\" style=\"text-align:right; left:700px\">\r\n");
      out.write("        <p>(우) 00000 서울 금천구 가산디지털로2로 123</p>\r\n");
      out.write("        <p>대표이사 : 박설희 / 대표번호 : 02-0000-0000</p>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </footer>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
