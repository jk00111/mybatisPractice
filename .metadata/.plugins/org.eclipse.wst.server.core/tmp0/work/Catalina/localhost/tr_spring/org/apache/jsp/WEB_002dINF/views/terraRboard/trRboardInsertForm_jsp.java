/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.87
 * Generated at: 2023-08-06 13:25:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.terraRboard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.kos.tr.common.CodeUtil;
import com.kos.tr.board.vo.TerraBoardVO;
import com.kos.tr.rboard.vo.TerraRboardVO;
import com.kos.tr.member.vo.TerraMemberVO;
import java.util.List;
import java.util.ArrayList;
import com.kos.tr.common.CodeUtil;
import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;

public final class trRboardInsertForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.log4j.Logger");
    _jspx_imports_classes.add("com.kos.tr.rboard.vo.TerraRboardVO");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.kos.tr.board.vo.TerraBoardVO");
    _jspx_imports_classes.add("com.kos.tr.member.vo.TerraMemberVO");
    _jspx_imports_classes.add("org.apache.log4j.LogManager");
    _jspx_imports_classes.add("com.kos.tr.common.CodeUtil");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		");
 request.setCharacterEncoding("UTF-8"); 
      out.write("\r\n");
      out.write("		");

			List<TerraMemberVO> uList = (List<TerraMemberVO>)request.getAttribute("uList");
			TerraMemberVO mvo = uList.get(0);
		
			Logger logger = LogManager.getLogger(this.getClass());
			logger.info("trRboardInsertForm.jsp Page >>> : " + uList.size());
			
			String bnum = request.getParameter("bnum");
			logger.info("trRboardInsertForm.jsp bnum >>> : " + bnum);
			
		
		
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"UTF-8\">\r\n");
      out.write("		<title>Insert title here</title>\r\n");
      out.write("		<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("		<script type=\"text/javascript\">\r\n");
      out.write("		\r\n");
      out.write("			$(document).ready(function(){\r\n");
      out.write("				selectAll();\r\n");
      out.write("				\r\n");
      out.write("				$(\"#rmemo\").keyup(function(){\r\n");
      out.write("					cut_200(this);\r\n");
      out.write("				});\r\n");
      out.write("				\r\n");
      out.write("				// 댓글 insert\r\n");
      out.write("				$(document).on(\"click\", \"#insertRbtn\", function(){\r\n");
      out.write("					console.log(\"insertBtn >>> : \");\r\n");
      out.write("					\r\n");
      out.write("					var bnum = $(\"#bnum\").val();\r\n");
      out.write("					var mname = $(\"#mname\").val();\r\n");
      out.write("					var rmemo = $(\"#rmemo\").val();\r\n");
      out.write("					var mdeptno = $(\"#mdeptno\").val();\r\n");
      out.write("					\r\n");
      out.write("					if (rmemo === \"\") {\r\n");
      out.write("						alert(\"댓글을 입력해주세요~\");\r\n");
      out.write("						return;\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					let insertURL 	= \"rBoardInsert.tr\";\r\n");
      out.write("					let method 		= \"POST\";\r\n");
      out.write("					let dataParam 	=	{\r\n");
      out.write("											bnum :bnum,\r\n");
      out.write("											mname : mname,\r\n");
      out.write("											rmemo : rmemo,\r\n");
      out.write("											mdeptno : mdeptno\r\n");
      out.write("										};\r\n");
      out.write("									\r\n");
      out.write("					dataParam = $(\"#trRboardInsertForm\").serialize();\r\n");
      out.write("					console.log(\"dataParam >>> : \" + dataParam);\r\n");
      out.write("					\r\n");
      out.write("					$.ajax({\r\n");
      out.write("							url 	: insertURL,\r\n");
      out.write("							type 	: method,\r\n");
      out.write("							data 	: dataParam,\r\n");
      out.write("							success : whenSuccess,\r\n");
      out.write("							error 	: whenError\r\n");
      out.write("							});\r\n");
      out.write("					\r\n");
      out.write("					function whenSuccess(resData){\r\n");
      out.write("\r\n");
      out.write("						if (\"GOOD\" == resData){\r\n");
      out.write("							\r\n");
      out.write("							trRboardInsertFormData();\r\n");
      out.write("							location.reload();\r\n");
      out.write("							\r\n");
      out.write("						}\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("					function whenError(e){\r\n");
      out.write("						alert(\"e >>> : \" + e.responseText);\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("					selectAll();\r\n");
      out.write("				});\r\n");
      out.write("				\r\n");
      out.write("				$(document).on(\"click\", \".deleteRbtn\", function(){\r\n");
      out.write("					console.log(\"D >>> : \");\r\n");
      out.write("					\r\n");
      out.write("					var rnumV = $(this).parents(\"li\").attr(\"dataNum\");\r\n");
      out.write("\r\n");
      out.write("					var target = $(this).parents(\".rbmemoItem\");\r\n");
      out.write("					console.log(\"target >>> : \" + target);\r\n");
      out.write("					\r\n");
      out.write("					let deleteURL = \"rBoardDelete.tr\";\r\n");
      out.write("					let method = \"POST\";\r\n");
      out.write("					let dataParam = {\r\n");
      out.write("									 rnum : $('#rnum').val(rnumV),\r\n");
      out.write("									};\r\n");
      out.write("					dataParam = $(\"#trRboardInsertForm\").serialize();\r\n");
      out.write("					console.log(\"dataParam >>> : \" + dataParam);\r\n");
      out.write("					\r\n");
      out.write("					$.ajax({\r\n");
      out.write("							url 	: deleteURL,\r\n");
      out.write("							type 	: method,\r\n");
      out.write("							data 	: dataParam,\r\n");
      out.write("							success : whenSuccess,\r\n");
      out.write("							error 	: whenError\r\n");
      out.write("							});\r\n");
      out.write("					\r\n");
      out.write("					function whenSuccess(resData){\r\n");
      out.write("						console.log(\"resData >>> : \" + resData);\r\n");
      out.write("						if (\"GOOD\" == resData){\r\n");
      out.write("							target.remove();\r\n");
      out.write("						}\r\n");
      out.write("						\r\n");
      out.write("						location.reload();\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("					function whenError(e){\r\n");
      out.write("						console.log(\"e >>> : \" + e.responseText);\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			function selectAll(){\r\n");
      out.write("				\r\n");
      out.write("				console.log(\"SALL >>> : \");\r\n");
      out.write("				\r\n");
      out.write("				let selectAllURL = \"rBoardSelectAll.tr\";\r\n");
      out.write("				let method		 = \"GET\";\r\n");
      out.write("				let dataParam	 = {\r\n");
      out.write("									bnum : $(\"#bnum\").val(),\r\n");
      out.write("									mname : $(\"#mname\").val(),\r\n");
      out.write("									mdeptno : $(\"#mdeptno\").val()\r\n");
      out.write("									};\r\n");
      out.write("				dataParam = $(\"#trRboardInsertForm\").serialize();\r\n");
      out.write("				console.log(\"dataParam >>> : \" + dataParam);\r\n");
      out.write("				\r\n");
      out.write("				$.ajax({\r\n");
      out.write("						url 	: selectAllURL,\r\n");
      out.write("						type 	: method,\r\n");
      out.write("						data 	: dataParam,\r\n");
      out.write("						success : whenSuccess,\r\n");
      out.write("						error 	: whenError\r\n");
      out.write("						});\r\n");
      out.write("				\r\n");
      out.write("				function whenSuccess(resData){\r\n");
      out.write("					console.log(\"resData >>> : \" + resData);\r\n");
      out.write("					console.log(\"whenSuccess trRboardSelectAll resData >>> : \" + resData);\r\n");
      out.write("					\r\n");
      out.write("					if (isEmpty(resData)){\r\n");
      out.write("						return false;\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("					let v = resData.split(\"&\");\r\n");
      out.write("					for(let i = 0; i < v.length; i++){\r\n");
      out.write("						console.log(v[i]);\r\n");
      out.write("						\r\n");
      out.write("						let vv = v[i].split(\",\");\r\n");
      out.write("						let j = 0\r\n");
      out.write("						for (j=0; j < vv.length-1; j++){\r\n");
      out.write("							console.log(\"vv[0] >>> : \" + vv[0]);\r\n");
      out.write("							console.log(\"vv[1] >>> : \" + vv[1]);\r\n");
      out.write("							console.log(\"vv[2] >>> : \" + vv[2]);\r\n");
      out.write("							console.log(\"vv[3] >>> : \" + vv[3]);\r\n");
      out.write("						}\r\n");
      out.write("						\r\n");
      out.write("						addNewItem(vv[0], vv[1], vv[2], vv[3]);\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				function whenError(e){\r\n");
      out.write("					console.log(\"e셀렉트올 에러발생>>> : \" + e.responseText);\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			function addNewItem(num, writer, content, datetime){\r\n");
      out.write("				\r\n");
      out.write("				// 데이터 체크\r\n");
      out.write("				if(isEmpty(num)) return false;\r\n");
      out.write("				\r\n");
      out.write("				var newLi = $(\"<span>\");\r\n");
      out.write("				newLi.attr(\"dataNum\", num);\r\n");
      out.write("				newLi.addClass(\"rmemoItem\");\r\n");
      out.write("				\r\n");
      out.write("				var writerP = $(\"<p>\");\r\n");
      out.write("				writerP.addClass(\"writer\");\r\n");
      out.write("				\r\n");
      out.write("				var nameSpan = $(\"<span>\");\r\n");
      out.write("				nameSpan.addClass(\"name\");\r\n");
      out.write("				nameSpan.html(decodeURIComponent(writer) + \"님\");\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("				var dateSpan = $(\"<span>\");\r\n");
      out.write("				dateSpan.html(\" / \" + datetime + \" \");\r\n");
      out.write("				\r\n");
      out.write("				var delInput = $(\"<input>\");\r\n");
      out.write("				delInput.attr({\r\n");
      out.write("								\"type\" 	: \"button\",\r\n");
      out.write("								\"value\" : \"삭제하기\"\r\n");
      out.write("							  });\r\n");
      out.write("				delInput.addClass(\"deleteRbtn\");\r\n");
      out.write("				\r\n");
      out.write("				var contentP = $(\"<p>\");\r\n");
      out.write("				contentP.html(decodeURIComponent(content));\r\n");
      out.write("				\r\n");
      out.write("				writerP.append(nameSpan).append(dateSpan).append(delInput);\r\n");
      out.write("				newLi.append(writerP).append(contentP);\r\n");
      out.write("				$(\"#trRboardlist\").append(newLi);\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			function getTextLength(s){\r\n");
      out.write("				\r\n");
      out.write("				var len = 0;\r\n");
      out.write("				for(var i=0; i < s.length; i++){\r\n");
      out.write("					if(escape(s.charAt(i)).length == 6){\r\n");
      out.write("						len++;\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("					len++;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				return len;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			function cut_200(obj){\r\n");
      out.write("				\r\n");
      out.write("				var t = $(obj).val();\r\n");
      out.write("				var l = t.length;\r\n");
      out.write("				while(getTextLength(t) > 200){\r\n");
      out.write("					l--;\r\n");
      out.write("					t = t.substring(0, 1);\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				$(obj).val(t);\r\n");
      out.write("				$('.bytes').text(getTextLength(t));\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			function trRboardInsertFormData(){\r\n");
      out.write("				\r\n");
      out.write("				$(\"#mname\").val(\"\");\r\n");
      out.write("				$(\"#rmemo\").val(\"\");\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			function isEmpty(val){\r\n");
      out.write("				\r\n");
      out.write("				if(typeof val == undefined || val == null || val == \"null\" || val == \"\"){\r\n");
      out.write("					\r\n");
      out.write("					return true;\r\n");
      out.write("					\r\n");
      out.write("				}else{\r\n");
      out.write("					return false;\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		</script>\r\n");
      out.write("		<style type=\"text/css\">\r\n");
      out.write("		\r\n");
      out.write("			#rmemo:focus{\r\n");
      out.write("				 outline: none;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			.rboard {\r\n");
      out.write("				width:800px;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			#insertRbtn{\r\n");
      out.write("				  display: block;\r\n");
      out.write("				  position: relative;\r\n");
      out.write("				  width: 120px;\r\n");
      out.write("				  padding: 0;\r\n");
      out.write("				  margin: 10px 20px 10px 0;\r\n");
      out.write("				  font-weight: 600;\r\n");
      out.write("				  text-align: center;\r\n");
      out.write("				  line-height: 50px;\r\n");
      out.write("				  color: black;\r\n");
      out.write("				  border-radius: 5px;\r\n");
      out.write("				  transition: all 0.2s ;\r\n");
      out.write("				  box-shadow: 0px 0px 0px 0px #21825B;\r\n");
      out.write("				  float:right;\r\n");
      out.write("				  background-color:#E2F0D9;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			.board{\r\n");
      out.write("				width:130px;\r\n");
      out.write("				background-color:#E2F0D9 ;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			#insertRbtn:hover {\r\n");
      out.write("			  box-shadow: 0px 0px 0px 5px #21825B;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("		\r\n");
      out.write("		</style>\r\n");
      out.write("	</head>\r\n");
      out.write("	<body>\r\n");
      out.write("<!-- 		<h3 style=\"text-align: center\">댓글</h3> -->\r\n");
      out.write("		<br>\r\n");
      out.write("		<div id=\"rbwriterdiv\">\r\n");
      out.write("			<form name=\"trRboardInsertForm\" id=\"trRboardInsertForm\">\r\n");
      out.write("				\r\n");
      out.write("				<table>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th class=\"board\" name=\"mname\" id=\"mname\">\r\n");
      out.write("							");
      out.print( CodeUtil.dappVal(mvo.getMdeptno()) );
      out.write("\r\n");
      out.write("							");
      out.print( mvo.getMname() );
      out.write("\r\n");
      out.write("						</th>\r\n");
      out.write("						<td rowspan=\"2\">\r\n");
      out.write("							<textarea name=\"rmemo\" id=\"rmemo\" rows=\"5\" cols=\"50\" style=\"width: 500px; border: none;\"></textarea>\r\n");
      out.write("							<input type=\"button\" value=\"입력\" style=\" width:100px;\" id=\"insertRbtn\">\r\n");
      out.write("						</td>\r\n");
      out.write("						\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td class=\"board\" >댓글<br><br>\r\n");
      out.write("							<div id=\"bytes\" style=\"width:100px; height:20px; border:1px solid gray;color:gray; \"><span style=\"color:gray;\"class=\"bytes\">0</span>bytes</div>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					\r\n");
      out.write("				</table>\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("				<input type=\"hidden\" name=\"bnum\" id=\"bnum\" value=\"");
      out.print( bnum );
      out.write("\">\r\n");
      out.write("				<input type=\"hidden\" name=\"rnum\" id=\"rnum\">\r\n");
      out.write("				<input type=\"hidden\" name=\"mnum\" id=\"mnum\" value=\"");
      out.print( mvo.getMnum() );
      out.write("\">\r\n");
      out.write("				<input type=\"hidden\" name=\"mname\" id=\"mname\" value=\"");
      out.print( mvo.getMname() );
      out.write("\" >\r\n");
      out.write("				<input type=\"hidden\" name=\"mdeptno\" id=\"mdeptno\" value=\"");
      out.print( mvo.getMdeptno());
      out.write("\">\r\n");
      out.write("				<ul name=\"trRboardlist\" id=\"trRboardlist\">\r\n");
      out.write("<!-- 					이곳에 동적 생성 요소가 들어옴 -->\r\n");
      out.write("				</ul>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
